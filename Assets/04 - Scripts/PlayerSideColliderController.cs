using UnityEngine;
using System.Collections;

public class PlayerSideColliderController : MonoBehaviour {

    private BoxCollider boxCollider;
    private Player player;
    private Transform playerT;
    private PlayerStates playerState;
    private Animation playerAnim;
    private PlayerFrontColliderController frontCollider;
    private float targetPosition;
    private Vector3 reactionDir; //The direciton of the reaction generated by hitting an object (Vector3.right or left)

    public void Start()
    {
        boxCollider = GetComponent<BoxCollider>();
        boxCollider.isTrigger = true;
        player = GameObject.Find("Player").GetComponent<Player>();
        playerT = player.transform;
        playerState = player.playerState;
        frontCollider = GameObject.Find("FrontCollider").GetComponent<PlayerFrontColliderController>();
        playerAnim = player.transform.Find("PlayerRotation/PlayerMesh/Prisoner").GetComponent<Animation>() as Animation;
    }

    void OnTriggerEnter(Collider collider)
    {
        if (collider.CompareTag("Obstacle"))
        {
            frontCollider.TemporaryDisable();
            if (playerState.isMovingRight || playerState.isMovingLeft)
            {
                targetPosition = FindTargetPosition();
                reactionDir = playerState.isMovingRight ? Vector3.left : Vector3.right;
                StartCoroutine("Stumble");
            }
            playerState.ResetActions();
        }
    }

    private float FindTargetPosition()
    {
        return Vector3.Dot(playerState.previousPosition, playerT.right);
    }

    IEnumerator Stumble()
    {
        while (true)
        {
            playerT.Translate(reactionDir * 16f * Time.fixedDeltaTime);

            if ((reactionDir.Equals(Vector3.left) && Vector3.Dot(playerT.position, playerT.right) <= targetPosition) ||
                (reactionDir.Equals(Vector3.right) && Vector3.Dot(playerT.position, playerT.right) >= targetPosition))
            {
                playerT.Translate(-reactionDir* Mathf.Abs(Vector3.Dot(playerT.position, playerT.right) - targetPosition) );
                reactionDir = Vector3.zero;
                break;
            }
            yield return new WaitForFixedUpdate();
        }
    }
}
